upstream php-handler {

    server 127.0.0.1:9000;
    #server unix:/var/run/php5-fpm.sock;
}

server {
	listen 80;
	server_name 192.168.0.10;
	root /var/www/cgitest;
	index index.php;

	location / {
		try_files $uri $uri/ index.php$is_args$args;
	}

	location ~ \.php$ {
		try_files $uri /index.php =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;

                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
                fastcgi_pass php-handler;
		fastcgi_index index.php;
        }

    location /notebook/ {
        proxy_set_header Host $host;
        #proxy_set_header Origin "";
        proxy_pass http://127.0.0.1:8888;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /nodered/ {
        proxy_set_header Host $host;
        proxy_pass http://127.0.0.1:1880/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

}

# PERSONAL WEBSITE DEVELOPMENT
server {
	listen 8080;
	server_name 192.168.0.10;
	index index.php;
	root /var/www/pp;

	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_pass php-handler;
	}

}

server {
    listen 80;
    server_name raspi.emawind.com www.raspi.emawind.com;

    location / {
        return 301 https://$server_name$request_uri;  # enforce 
    }

}

server {
    listen 443 ssl;
    server_name raspi.emawind.com www.raspi.emawind.com;

    ssl_certificate /etc/nginx/cert.pem;
    ssl_certificate_key /etc/nginx/cert.key;

    location /owncloud/ {
        #proxy_set_header Host   $http_host;
        proxy_pass https://127.0.0.1:8085;
    }

    location /microblog/ { try_files $uri @microblog; }
    location @microblog {
        include uwsgi_params;
        uwsgi_pass unix:/home/pi/flasktest/microblog.sock;
    }

    location /sysinfo/ { try_files $uri @sysinfo; }
    location @sysinfo {
        include uwsgi_params;
        uwsgi_pass unix:/home/pi/uwsgi-test/systemstats.sock;
        #deny all;
    }

    location /devnote/ {
        proxy_set_header Host $host;
        proxy_pass http://127.0.0.1:8083/;
    }

    location /public/ {
        alias /home/pi/public/;
	autoindex on;
	allow all;
    }

    location /notebook/ {
        proxy_set_header Host $host;
        #proxy_set_header Origin "";
        proxy_pass http://127.0.0.1:8888;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /nodered/ {
        proxy_set_header Host $host;
        proxy_pass http://127.0.0.1:1880/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        deny all;
    }

    location /ws/ {
        proxy_set_header Host $host;
        proxy_pass http://127.0.0.1:1880/;
    }

    #location /microblog/ {
    #    proxy_set_header Host   $http_host;
    #    proxy_pass http://127.0.0.1:5000/;
    #}

    location / {
        deny all;
    }

}

# OWNCLOUD
server {
	listen 8085 ssl;
	server_name 127.0.0.1;

	ssl_certificate /etc/nginx/cert.pem;
	ssl_certificate_key /etc/nginx/cert.key;

	root /var/www;
	client_max_body_size 2000M; # set max upload size
	fastcgi_buffers 64 4K;

	gzip off;

	rewrite ^/owncloud/caldav(.*)$ /remote.php/caldav$1 redirect;
	rewrite ^/owncloud/carddav(.*)$ /remote.php/carddav$1 redirect;
	rewrite ^/owncloud/webdav(.*)$ /remote.php/webdav$1 redirect;

	index index.php;
	error_page 403 /owncloud/core/templates/403.php;
	error_page 404 /owncloud/core/templates/404.php;

	location = /owncloud/robots.txt {
	    allow all;
	    log_not_found off;
	    access_log off;
    	}
	
	location ~ ^/owncloud/(?:\.htaccess|data|config|db_structure\.xml|README) {
	    deny all;
	}
	
	location /owncloud/ {
		# The following 2 rules are only needed with webfinger
		rewrite ^/owncloud/.well-known/host-meta /public.php?service=host-meta last;
		rewrite ^/owncloud/.well-known/host-meta.json /public.php?service=host-meta-json last;

		rewrite ^/owncloud/.well-known/carddav /remote.php/carddav/ redirect;
		rewrite ^/owncloud/.well-known/caldav /remote.php/caldav/ redirect;

		rewrite ^(/owncloud/core/doc/[^\/]+/)$ $1/index.html;

		try_files $uri $uri/ index.php;
	}
	
	location ~ \.php(?:$|/) {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_param HTTPS on;
		fastcgi_pass php-handler;
	}
	
	# Optional: set long EXPIRES header on static assets
	location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
		expires 30d;
		# Optional: Don't log access to assets
		access_log off;	
	}
}

# PERSONAL WEBPAGE
server {
    listen 80;
    server_name kr.emawind.com www.kr.emawind.com;
    location / {
        proxy_set_header Host   $host;
        proxy_pass http://127.0.0.1:8000/;
        #memcached_pass http://127.0.0.1:8000;
    }
}

server {
    listen 80;
    listen 443 ssl;
    server_name plex.emawind.com;

    rewrite ^/$ /web/$1 redirect;

    ssl_certificate /etc/nginx/cert.pem;
    ssl_certificate_key /etc/nginx/cert.key;

    location / {
        proxy_set_header Host   $host;
        proxy_pass https://192.168.0.6:32400;
        proxy_redirect default;
    }

    auth_basic "closed website";
    auth_basic_user_file /etc/nginx/.htpasswd;
}

server {
	listen 80 default_server;
	listen 443 ssl default_server;
	server_name _;

        ssl_certificate /etc/nginx/cert.pem;
        ssl_certificate_key /etc/nginx/cert.key;

	location / {
		deny all;
	}
}
